<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrigenDatos</name>
    </assembly>
    <members>
        <member name="T:OrigenDatos.Clases.Conexion">
            <summary>
            Clase encargada de la conexion con la base de datos
            </summary>
            <remarks>
            Esta clase esta echa administrar todas las conexiones a 
            las bases de datos, ya sean en distiontos manejadores o 
            los excel o lo que fuere.
            Aqui van todas las consultas SQL.
            Tambien si se quieren manejar bases de datos distribuidas
            tiene que hacerse desde aqui.
            </remarks>
        </member>
        <member name="P:OrigenDatos.Clases.Conexion.datosConexion">
            <summary>
            Contiene la informacion para la conexion con la base de datos sql
            </summary>
        </member>
        <member name="F:OrigenDatos.Clases.Conexion.DatosConexion">
            <summary>
            Informacion de la conexion del objeto
            </summary>
        </member>
        <member name="F:OrigenDatos.Clases.Conexion.Excel">
            <summary>
            Excel utlizado
            </summary>
        </member>
        <member name="P:OrigenDatos.Clases.Conexion.DGruposExcel">
            <summary>
            Diccionario para leer la informacion del excel
            </summary>
        </member>
        <member name="P:OrigenDatos.Clases.Conexion.DGruposBD">
            <summary>
            Diccionario para leer la informacion de la base de datos
            </summary>
        </member>
        <member name="P:OrigenDatos.Clases.Conexion.DGrupos">
            <summary>
            Diccionario utilizado por la conexion actual
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.#ctor">
            <summary>
            Conexion por default
            </summary>
            <remarks>
            Utiliza la informacion basica para la base de datos
            </remarks>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.#ctor(System.String)">
            <summary>
            Constructor con opcion a cadena de conexion
            </summary>
            <remarks>
            Permite administrar mas la conexion
            </remarks>
            <param name="Datos">Cadena de conexion a la base de datos</param>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor completo
            </summary>
            <param name="Datos"></param>
            <param name="excelDireccion"></param>
            <param name="ciclo"></param>
            <param name="tipo"></param>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Exepciones(System.String)">
            <summary>
            Obtiene la informacion de las excepciones en la base de datos
            </summary>
            <param name="cve_espacio"></param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Edificio_Area(System.String)">
            <summary>
            Obtiene el valor que tiene un edificio con respecto a un edificio
            </summary>
            <param name="cve_edificio">Clave del edificio a buscar</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Necesidades_prof(System.String)">
            <summary>
            Obtiene de la base de datos las necesidades marcadas al profesor
            </summary>
            <param name="rpe">Profesor a buscar</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Salones">
            <summary>
            Muestra los salones registrados en la base de datos
            </summary>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Salon_equipo(System.String)">
            <summary>
            Obtiene de la base de datos el equipo instalado en el salon
            </summary>
            <param name="cve_espacio">Clave del salon</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Necesidades_Grupo(System.String,System.String,System.String)">
            <summary>
            Obtiene las necesidades de un grupo
            </summary>
            <param name="cve_materia">Clave de la materia</param>
            <param name="rpe">clave del profesor</param>
            <param name="tipo">tipo de claser (T/L)</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.GruposAnteriores(System.Int32,System.Int32,System.String)">
            <summary>
            Hace una consulta a la base de datos para obtener los grupos que se impartieron una hora antes por el profesor
            </summary>
            <param name="rpe">Clave unica del profesor</param>
            <param name="hora">Hora de la cual se quiere obtener la informacion</param>
            <param name="ciclo">Semestre</param>
            <returns>DataTable con los datos de los grupos impartidos</returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.salonesPosibles(System.String)">
            <summary>
            Consulta para obtener los salones asignados en las materias
            </summary>
            <param name="cve_materia"></param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.SemestresAnteriores(System.String,System.String,System.String)">
            <summary>
            Obtiene Los grupos de semestres anteriores
            </summary>
            <param name="cve_materia">Clave de la materia</param>
            <param name="ciclo"></param>
            <param name="rpe"></param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Autenticacion">
            <summary>
            Checa si la conexion es correcta
            </summary>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Comando(System.String)">
            <summary>
            Ejecuta una consulta en SQL utilizando el comando enviado como parametro
            Usado principalmente para consultas DLL (Data Definition Language)
            </summary>
            <param name="textoCmd"></param>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.Querry(System.String)">
            <summary>
            Manda un comando a la base de datos y regresa el DataTable como resultado
            </summary>
            <param name="textoCmd"> Query a ejecutar</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Conexion.UpdateGrupo(OrigenDatos.Clases.ListaGrupos,System.String)">
            <summary>
            Actualiza la informacion en la base de datos
            </summary>
            <param name="grupos">Lista de grupos a escribir</param>
            <param name="hojaExcel">Hoja en la que se va a escribir(No importa si existe)</param>
        </member>
        <member name="P:OrigenDatos.Clases.Grupo.Requerimientos">
            <summary>
            Convierte el ciclo a numeros faciles de usar en un condicional para saber cual es mayor
            Se empieza desde el 2014-2015/I al cual se le asigna 0 y de ai en adelante aumenta en 0.5
            </summary>
        </member>
        <member name="P:OrigenDatos.Clases.Grupo.qUpdate">
            <summary>
            Cadena para el query de update.
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.Grupo.Set_GruposHorasAnteriores(System.Data.DataTable,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Busca los grupos en los que dio clases el profesor anteriormente
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.Grupo.SalonValido(OrigenDatos.Clases.Salon)">
            <summary>
            Regresa cual es el valor que tiene un salon para el area del grupo.
            02/06/2016--Decidi definir el -1 como un valor completamente incorrecto y que fuerse al sistema a ignorar esta asignacion.
            </summary>
            <param name="salon"></param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.Grupo.empalme(OrigenDatos.Clases.Grupo)">
            <summary>
            Checa si hay empalme con el grupo que se pasa por parametro
            </summary>
            <param name="grupo">Grupo a checar si hay empalme</param>
            <returns>Regresa true si hay un empalme entre los grupos.</returns>
        </member>
        <member name="T:OrigenDatos.Clases.LibroExcel">
            <summary>
            Abre un archivo de excel y lee o escribe en el
            </summary>
        </member>
        <member name="F:OrigenDatos.Clases.LibroExcel.archivo">
            <summary>
            Nombre del archivo
            </summary>
        </member>
        <member name="F:OrigenDatos.Clases.LibroExcel.dir">
            <summary>
            Direccion del archivo
            </summary>
        </member>
        <member name="F:OrigenDatos.Clases.LibroExcel.headers">
            <summary>
            Diccionario con los encabezados de la tabla
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.SetHeaders">
            <summary>
            Inicializa el diccionario
            </summary>
            <remarks>
            Solo se llama cuando se crea el objeto
            </remarks>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.#ctor(System.String,System.String,System.String)">
            <summary>
            Almacena la informacion y la guarda y checa si existe el archivo
            </summary>
            <param name="direccion">Direccion del archivo</param>
            <param name="ciclo">Semestre al cual se va a considerar</param>
            <param name="tipo">tipo por default para los grupos</param>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.GetSheets">
            <summary>
            Lee el excel y regresa las hojas en una coleccion de tablas
            </summary>
            <returns>Hojas del excel</returns>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.AsList(System.Data.DataTable)">
            <summary>
            Convierte un DataTable a List de tipo grupo
            </summary>
            <param name="dtGrupos">Tabla de grupos</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.EscribeGrupos(System.Collections.Generic.IList{OrigenDatos.Clases.Grupo},System.String)">
            <summary>
            Escribe la informacion de los grupos
            </summary>
            <param name="grupos">Nombre de la hoja que se quiere poner </param>
            <param name="hoja">Hoja en la que se va a escribir</param>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.EscribeGrupo(OrigenDatos.Clases.Grupo,ClosedXML.Excel.IXLWorksheet)">
            <summary>
            Escribe un grupo en la hoja dada
            </summary>
            <param name="g">Grupo a escribir</param>
            <param name="worksheet">Hoja a modificar</param>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.GetStringSheets">
            <summary>
            Obtiene el nombre de las hojas del excel e inicializa la variable Sheets
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.LibroExcel.GetGrupos(System.String)">
            <summary>
            Lee el excel e inicializa los grupos con la ainfromacion
            </summary>
            <param name="hoja">Hoja de excel</param>
        </member>
        <member name="M:OrigenDatos.Clases.ListaGrupos.EnHora_Bool(System.Int32)">
            <summary>
            Checa si los grupos estan asignados a cierta hora
            </summary>
            <param name="hora">Hora a checar</param>
            <returns>Arreglo de boleanos que sera false cuando este disponible ese horario</returns>
        </member>
        <member name="M:OrigenDatos.Clases.ListaGrupos.SinAsignar(System.String,System.Int32)">
            <summary>
            Checa los grupos que estan por asignar en el horario y dias marcados
            </summary>
            <param name="dias">Cadena de 6 caracteres conformada por 0 y 1 empezando del Lunes a Sabado</param>
            <param name="hora">Hora en la que se buscaran los grupos sin asignar</param>
            <param name="ciclo">Ciclo escolar a checar</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.ListaGrupos.Asignados(System.String,System.Int32)">
            <summary>
            Checa los grupos que estan por asignar en el horario y dias marcados
            </summary>
            <param name="dias">Cadena de 6 caracteres conformada por 0 y 1 empezando del Lunes a Sabado</param>
            <param name="hora">Hora en la que se buscaran los grupos sin asignar</param>
            <param name="ciclo">Ciclo escolar a checar</param>
            <returns></returns>
        </member>
        <member name="M:OrigenDatos.Clases.ListaGrupos.Ocupados(OrigenDatos.Clases.ListaSalones,System.Int32,System.Int32,System.String)">
            <summary>
            busca salon a salon los que esten ocupados entre las horas designadas y los dias
            </summary>
            <param name="salones">Grupo de salones validos para checar</param>
            <param name="ini">hora inicial para el rango de horas</param>
            <param name="fin">hora final para el rango de horas</param>
            <param name="dias">dias que se van a buscar. L-M-Mi-J-V-S Marcar con un 1 los dias que quieres obtener</param>
            <returns></returns>
        </member>
        <member name="T:OrigenDatos.Clases.ListaSalones">
            <summary>
            Esta clase se hiso para no estar manejando tantas listas y para que la hisiera de filtro o buscador para siertas situaciones
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.ListaSalones.#ctor">
            <summary>
            Solo crea la lista, falta inicializar la conexion
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.ListaSalones.#ctor(System.Collections.Generic.List{OrigenDatos.Clases.Salon})">
            <summary>
            Inicializa todos los componentes con algun valor
            </summary>
            <param name="c">Conexion a utilizar</param>
            <param name="salones">Lista de salones a utilizar</param>
        </member>
        <member name="M:OrigenDatos.Clases.ListaSalones.#ctor(OrigenDatos.Clases.Conexion,System.Data.DataTable,System.Int32)">
            <summary>
            Inicializa la coneccion y crea los salones a partir de una tabla
            </summary>
            <param name="c">Conexion a utilizar</param>
            <param name="dtSalones">Tabla de salones</param>
        </member>
        <member name="T:OrigenDatos.Clases.Salon">
            <summary>
            Contiene la informacion de un salon
            </summary>
        </member>
        <member name="P:OrigenDatos.Clases.Salon.horario">
            <summary>
            Marca con True cuando ya ahy una materia que lo ocupa
            Este solo es en base al horario marcado por la hora
            </summary>
        </member>
        <member name="M:OrigenDatos.Clases.Salon.#ctor(OrigenDatos.Clases.Salon)">
            <summary>
            Constructor por copia 
            (Solo usarlo para asignarlo a las variables del algoritmo)
            </summary>
            <param name="s">Salon a copiar</param>
        </member>
        <member name="M:OrigenDatos.Clases.Salon.PrioridadArea(System.String)">
            <summary>
            Obtiene el valor que tiene el salon para el area
            </summary>
            <param name="area">Numero del area a checar</param>
            <returns></returns>
        </member>
    </members>
</doc>
